---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ntfy
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
     # version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
#  valuesFrom:
#   - kind: ConfigMap
#     name: ntfy-helm-values
  values:
     #enter values here for global overrides
    controllers:
      ntfy:
      #  type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        # initContainers:
          # init-db:
            # image:
              # repository: ghcr.io/onedr0p/postgres-init
              # tag: 16
            # envFrom: &envFrom
              # - secretRef:
                  # name: radarr-secret
        containers:
          app:
            image:
              repository: docker.io/binwiederhier/ntfy
              tag: latest
              pullPolicy: Always
            command: ["ntfy", "serve"]
            env:
              # RADARR__APP__INSTANCENAME: Radarr
              # RADARR__APP__THEME: dark
              portNum: &port 8080
              NTFY_UPSTREAM_BASE_URL: https://ntfy.sh
              NTFY_CACHE_FILE: "/var/cache/ntfy/cache.db"
              NTFY_AUTH_FILE: "/var/cache/ntfy/auth.db"
              NTFY_ATTACHMENT_CACHE_DIR: "/var/cache/ntfy/attachments"
              NTFY_WEB_PUSH_FILE: "/var/cache/ntfy/webpush.db"
              NTFY_ENABLE_LOGIN: false
              NTFY_BEHIND_PROXY: true
              NTFY_BASE_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              NTFY_LISTEN_HTTP: ":8080"
              TZ: America/New_York
              #NTFY_AUTH_DEFAULT_ACCESS: deny-all
              #NTFY_WEB_PUSH_PUBLIC_KEY: <public_key>
              #NTFY_WEB_PUSH_PRIVATE_KEY: <private_key>
              #NTFY_WEB_PUSH_EMAIL_ADDRESS: <email>
            # envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: ntfy
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        #annotations:
        #  nginx.ingress.kubernetes.io/app-root: /ntfy
        #  external-dns.alpha.kubernetes.io/target: "external."
        #  nginx.ingress.kubernetes.io/auth-url: "http://ak-outpost-auth-knightd.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx"
        #  nginx.ingress.kubernetes.io/auth-signin: "https://sso2./outpost.goauthentik.io/start?rd=://"
        #  nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid"
        #  nginx.ingress.kubernetes.io/auth-snippet: |
        #  proxy_set_header X-Forwarded-Host ;
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      cache:
        existingClaim: ntfy
        globalMounts:
          - path: /var/cache/ntfy
      # scripts:
        # type: configMap
        # name: radarr-configmap
        # defaultMode: 0775
        # globalMounts:
          # - path: /scripts/pushover-notifier.sh
            # subPath: pushover-notifier.sh
            # readOnly: true
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

