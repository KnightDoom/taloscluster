# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
  # name: postgres-nfs
# spec:
  # capacity:
    # storage: 1Mi
  # accessModes: ["ReadWriteMany"]
  # storageClassName: nfs-slow #csi-driver-nfs
  # nfs:
    # server: voyager.internal
    # path: ${SECRET_NFS_POSTGRES:=temp}
  # mountOptions:
    # - nfsvers=4.2
    # - hard
    # - noatime
    # - nodiratime
    # - rsize=131072
    # - wsize=131072
    # - nconnect=8
  # persistentVolumeReclaimPolicy: Delete
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: postgres-nfs
# spec:
#   accessModes:
#     - ReadWriteMany
#   volumeName: postgres-nfs
#   storageClassName: ""
#   resources:
#     requests:
#       storage: 1Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: crunchy-backup
  finalizers:
    - kubernetes.io/pv-protection
  selfLink: /api/v1/persistentvolumes/crunchy-backup
spec:
  capacity:
    storage: 200Mi
  csi:
    driver: driver.longhorn.io
    volumeHandle: crunchy-backup
    fsType: ext4
    volumeAttributes:
      diskSelector: ''
      nodeSelector: ''
      numberOfReplicas: '2'
      staleReplicaTimeout: '20'
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: longhorn-static
  volumeMode: Filesystem
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
  # name: crunchy-backup
  # finalizers:
    # - kubernetes.io/pvc-protection
  # selfLink: /api/v1/namespaces/kube-system/persistentvolumeclaims/crunchy-backup
# spec:
  # accessModes:
    # - ReadWriteMany
  # resources:
    # requests:
      # storage: 200Mi
  # volumeName: crunchy-backup
  # storageClassName: longhorn-static
  # volumeMode: Filesystem

