---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres-16
spec:
  postgresVersion: 16

  dataSource:
    pgbackrest:
      stanza: db
      configuration:
        - secret:
            name: crunchy-postgres-secret
      global:
        compress-type: "bz2"
        compress-level: "9"
        # Minio
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /crunchy-pgo
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
      repo:
        name: repo1
        s3:
          bucket: "cnpg-backup"
          endpoint: "192.168.86.9:9000"
          region: "us-east"
  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"
  postgresVersion: 16
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M
  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 1GB
        synchronous_commit: "on"
        parameters:
          max_connections: 500
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replicas 2
      dataVolumeClaimSpec:
        storageClassName: longhorn-1r
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/data: postgres
  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric

   - name: mealie
      databases:
        - mealie
      password:
        type: AlphaNumeric


    # Applications
    # - name: atuin
      # databases:
        # - atuin
      # password:
        # type: AlphaNumeric

    # - name: autobrr
      # databases:
        # - autobrr
      # password:
        # type: AlphaNumeric

    # - name: gatus
      # databases:
        # - gatus
      # password:
        # type: AlphaNumeric

    # - name: lidarr
      # databases:
        # - lidarr_main
        # - lidarr_log
      # password:
        # type: AlphaNumeric

    # - name: piped
      # databases:
        # - piped
      # password:
        # type: AlphaNumeric

    # - name: prowlarr
      # databases:
        # - prowlarr_main
      # password:
        # type: AlphaNumeric

    # - name: radarr
      # databases:
        # - radarr_main
      # password:
        # type: AlphaNumeric

    # - name: readarr
      # databases:
        # - readarr_main
        # - readarr_cache
        # - readarr_log
      # password:
        # type: AlphaNumeric

    # - name: sonarr
      # databases:
        # - sonarr_main
      # password:
        # type: AlphaNumeric
   backups:
     # s3:
       # bucket:  "cnpg-bak-mealie"
       # endpoint: "192.168.86.9:9000"
       
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres
      global: &backupFlag
        # Global
        compress-type: "bz2"
        compress-level: "9"
        # QNAP
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /crunchy-pgo
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1 # QNAP
          s3: &qnap
            bucket: "crunchy-postgres"
            endpoint: "192.168.86.9:9001"
            region: "us-east"
          schedules:
            full: "30 1 * * 0" # Sunday at 01:30
            differential: "30 1 * * 1-6" # Mon-Sat at 01:30
            incremental: "30 3-23 * * *" # Every hour except 01:30-2:30
#  dataSource:
#    pgbackrest:
#      stanza: db
#      configuration: *backupConfig
#      global: *backupFlag
#      repo:
#        name: "repo1"
#        s3: *qnap
  # proxy:
    # pgBouncer:
      # service:
        # metadata:
          # annotations:
            # external-dns.alpha.kubernetes.io/hostname: postgres.${SECRET_DOMAIN}
            # lbipam.cilium.io/ips: ${SVC_POSTGRES_ADDR:=temp}
        # type: LoadBalancer
      # port: 5432
      # replicas: *replicas
      # config:
        # global:
          # # Grafana requires session
          # # Ref: https://github.com/grafana/grafana/issues/74260
          # pool_mode: session
          # client_tls_sslmode: prefer
          # default_pool_size: "100"
          # max_client_conn: "500"
      # topologySpreadConstraints:
        # - maxSkew: 1
          # topologyKey: kubernetes.io/hostname
          # whenUnsatisfiable: DoNotSchedule
          # labelSelector:
            # matchLabels:
              # postgres-operator.crunchydata.com/cluster: *name
              # postgres-operator.crunchydata.com/role: pgbouncer