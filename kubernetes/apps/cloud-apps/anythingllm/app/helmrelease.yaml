---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: anythingllm
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
     # version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
#  valuesFrom:
#   - kind: ConfigMap
#     name: anythingllm-helm-values
  values:
     #enter values here for global overrides
    controllers:
      anythingllm:
        annotations:
          reloader.stakater.com/auto: "true"
        # initContainers:
          # init-db:
            # image:
              # repository: ghcr.io/onedr0p/postgres-init
              # tag: 16
            # envFrom: &envFrom
              # - secretRef:
                  # name: radarr-secret
        containers:
          app:
            image:
              repository: mintplexlabs/anythingllm
              tag: 1.8.5@sha256:47165ec62d0ec79b784d1739ca689228d0dec835e4b03309590cef9023431f28
            env:
              # RADARR__APP__INSTANCENAME: Radarr
              # RADARR__APP__THEME: dark
              portNum: &port 3001
              TZ: America/New_York
              STORAGE_DIR: "/app/server/storage"
              UID: "1000"
              GID: "1000"
              GENERIC_OPENAI_STREAMING_DISABLED: "true"
            envFrom:
              - secretRef:
                  name: anythingllm-env
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  httpGet:
                    path: /health/v1/api/health
                    port: 8888
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities: { add: ["SYS_ADMIN"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: anythingllm
        ports:
          http:
            port: *port
          metrics:
            port: 9090
    ingress:
      app:
        className: external
        annotations:
        # - nginx.ingress.kubernetes.io/app-root: /
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
                  # This should be the in-cluster DNS name for the authentik outpost service
        # as when the external URL is specified here, nginx will overwrite some crucial headers
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-auth-knightd.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://sso2.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "llm.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: anythingllm
        globalMounts:
          - path: "/app/server/storage"
            subPath: storage
      #    - path: "/app/server/.env"
      #      subPath: .env
      # scripts:
        # type: configMap
        # name: radarr-configmap
        # defaultMode: 0775
        # globalMounts:
          # - path: /scripts/pushover-notifier.sh
            # subPath: pushover-notifier.sh
            # readOnly: true
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

