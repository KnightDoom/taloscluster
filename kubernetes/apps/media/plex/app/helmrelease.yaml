---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # dependsOn:
# #    - name: nvidia-gpu
# #    namespace: kube-system
    # - name: longhorn
      # namespace: longhorn-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.9.9961@sha256:6c86319bb3275135f5da5aec71b45e48305669ecbceee0f88d335bebf0d0f218
            env:
              TZ: America/New_York
              PLEX_ADVERTISE_URL: "https://plex.${SECRET_DOMAIN},https://pk.${SECRET_DOMAIN},https://192.168.86.236:32400,https://pk4k.${SECRET_DOMAIN}:32400"
              PLEX_NO_AUTH_NETWORKS: "192.168.86.0/24"
              NVIDIA_VISIBLE_DEVICES: all
              NVIDIA_DRIVER_CAPABILITIES: compute,video,utility
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 500Mi
              limits:
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
        seccompProfile: { type: RuntimeDefault }
      runtimeClassName: nvidia
      #nodeSelector:
        #intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: "192.168.86.236"
        ports:
          http:
            port: 32400
    ingress:
      app:
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
             location ~ ^/library/streams {
               proxy_set_header        Range "";
               proxy_pass              http://plex.media.svc.cluster.local:32400;
               proxy_http_version      1.1;
             }
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      app2:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
             location ~ ^/library/streams {
               proxy_set_header        Range "";
               proxy_pass              http://plex.media.svc.cluster.local:32400;
               proxy_http_version      1.1;
             }
        className: external
        hosts:
          - host: "pk.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: plex-config
        # If setting up Plex for the first time, you'll want to add the globalMounts section
        #globalMounts:
        #  - path: /config/Library/Application Support/Plex Media Server
      # Separate PVC for cache to avoid backing up cache files
      cache:
        type: emptyDir
        #existingClaim: plex-cache
        #globalMounts:
        #  - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: "192.168.86.9"
        path: "/PlexLib"
        globalMounts:
          - path: /library
