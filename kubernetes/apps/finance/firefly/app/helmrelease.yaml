---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: firefly
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
     # version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
#  valuesFrom:
#   - kind: ConfigMap
#     name: firefly-helm-values
  values: 
     #enter values here for global overrides  
    controllers:
      firefly:
        annotations:
          reloader.stakater.com/auto: "true"
        # initContainers:
          # init-db:
            # image:
              # repository: ghcr.io/onedr0p/postgres-init
              # tag: 16
            # envFrom: &envFrom
              # - secretRef:
                  # name: radarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/deedee-ops/firefly-iii
              tag: 6.1.25
            env:
              # RADARR__APP__INSTANCENAME: Radarr
              # RADARR__APP__THEME: dark
              DEFAULT_LANGUAGE: "en_us"
              DEFAULT_LOCALE: "equal"
              portNum: &port 8080
              TRUSTED_PROXIES: "**"
              ENABLE_EXCHANGE_RATES: true
              ENABLE_EXTERNAL_RATES: true
              ALLOW_WEBHOOKS: true
              TZ: America/New_York
            envFrom:
               - secretRef:
                   name: firefly-db-secret
               - secretRef:
                   name: firefly-app-password
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 4Gi
      fireflycron:
        type: cronjob
        cronjob:
          schedule: "*/5 * * * *"
        containers:
          fireflycron:
            image: 
              repository: alpine
              tag: latest
            command:
              - "sh"
              - "-c"
              - "wget -qO- http://firefly:8080/api/v1/cron/${STATIC_CRON_TOKEN}"
            envFrom:
               - secretRef:
                   name: firefly-app-password
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 10Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: firefly
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        #annotations:
        # - nginx.ingress.kubernetes.io/app-root: /firefly
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: firefly
        advancedMounts:
          firefly:
            app:
              - path: /config
      # scripts:
        # type: configMap
        # name: radarr-configmap
        # defaultMode: 0775
        # globalMounts:
          # - path: /scripts/pushover-notifier.sh
            # subPath: pushover-notifier.sh
            # readOnly: true
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      uploads:
        type: nfs
        server: 192.168.86.9
        path: /BackedStorage/firefly
        globalMounts:
          - path: /files

