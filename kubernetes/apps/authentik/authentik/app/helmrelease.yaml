---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.12.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: "authentik-secret,authentik-db-secret"
      deploymentStrategy:
        type: RollingUpdate
      envFrom:
        - secretRef:
            name: authentik-secret
        - secretRef:
            name: authentik-db-secret
    authentik:
      redis:
        host: dragonfly.database.svc.cluster.local
    server:
      readinessProbes:
        enabled: false
      startupProbes:
        enabled: false
      livenessProbes:
        enabled: false
      autoscaling:
        enabled: true
        minReplicas: 2
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # gethomepage.dev/enabled: "true"
          # gethomepage.dev/icon: authentik.png
          # gethomepage.dev/name: Authentik
          # gethomepage.dev/group: Infrastructure
          # gethomepage.dev/app: authentik
          # gethomepage.dev/description: OIDC User Management
          # gethomepage.dev/widget.type: authentik
          # gethomepage.dev/widget.url: http://authentik-server.security
          # gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_AUTHENTIK_TOKEN}}"
        hosts:
          - sso.${SECRET_DOMAIN}
        https: false
      volumes:
        - name: authentik-media
          persistentVolumeClaim:
            claimName: authentik-media
      volumeMounts:
        - name: authentik-media
          mountPath: /media/public/data
    worker:
      autoscaling:
        enabled: true
        minReplicas: 2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sso-internal-ingress
spec:
  ingressClassName: internal
  rules:
  - host: authentik.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          service:
            name: authentik-server
            port:
              number: 80
        path: /
        pathType: Prefix

