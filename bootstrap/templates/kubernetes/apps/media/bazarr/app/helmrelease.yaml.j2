---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
     # version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
#  valuesFrom:
#   - kind: ConfigMap
#     name: bazarr-helm-values
  values:
     #enter values here for global overrides
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        # initContainers:
          # init-db:
            # image:
              # repository: ghcr.io/onedr0p/postgres-init
              # tag: 16
            # envFrom: &envFrom
              # - secretRef:
                  # name: radarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.2@sha256:dbc87e5ce9e199709188e152e82b3ff5d33e6521a1b3d61e465aa75b4b739e7f
            env:
              # RADARR__APP__INSTANCENAME: Radarr
              # RADARR__APP__THEME: dark
              portNum: &port 6767
              TZ: America/New_York
            # envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 10Mi
              limits:
                memory: 4Gi
          exportarr:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.2@sha256:cfa5172442268f09e6eb75e17ffb35d300ab4c02772ce0b1bc14c462ca85f808
            args:
              - bazarr
            env:
              INTERFACE: 0.0.0.0
              PORT: 7879
              URL: 'http://bazarr:6767'
              APIKEY: "newsn7zz12j67l4cwovjt6cyq6raqzmz"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: 7879
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 10Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port
      metrics:
        controller: bazarr
        ports:
          metrics:
            port: 7879
    ingress:
      app:
        className: internal
        #annotations:
        # - nginx.ingress.kubernetes.io/app-root: /bazarr
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: bazarr
        globalMounts:
          - path: /config
      # scripts:
        # type: configMap
        # name: radarr-configmap
        # defaultMode: 0775
        # globalMounts:
          # - path: /scripts/pushover-notifier.sh
            # subPath: pushover-notifier.sh
            # readOnly: true
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      media:
        type: nfs
        server: "#{ bootstrap_plex.nfs_server_ip }#"
        path: "#{ bootstrap_plex.export_path }#"
        globalMounts:
          - path: /library

